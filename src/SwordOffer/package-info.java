package SwordOffer;

/*
从边界测试，功能测试，负面测试（错误测试）来确保代码的完整性
            * 输入测试分三种
        * 1.特殊--空指针，或者针对题目要求无意义的指针
        * 2.边界测试，这里旋转零个，即升序情况
        * 3.功能测试，一些特殊的例子，如重复值
        * 4.性能测试
        *

构建代码应该从 错误测试，边界测试，再到功能测试，一步步构建。

递归程序：1.先分析程序需要哪些功能。 2.分析在那里进行递归。 3.递归的终止条件。
*/

/*  . > 括号 > + - 自增 自减 非 > 算术操作 > 移位操作 > 不等式操作 > 等和不等操作 > 位操作 >逻辑操作 > ?: = +=等赋值操作
 * */
// &的优先级别比==低，=最低


//1.浮点数相等比较，不能使用==


/*比较二叉树b是不是二叉树a的子结构

此题很重要 -->正确划分 主程序 和 子程序。
程序里面使用了子函数，所以整个程序的边界值，错误值，功能值
和子程序的边界值，功能值，错误测试要分开。
重要的不是结论，而是解题的思路和思想。
*/